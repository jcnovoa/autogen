AWSTemplateFormatVersion: '2010-09-09'
Description: 'AutoGen Studio Infrastructure - App Runner, RDS, Route 53'

Parameters:
  DomainName:
    Type: String
    Default: autogen.successkpis.world
    Description: Domain name for the application
  
  HostedZoneId:
    Type: String
    Description: Route 53 Hosted Zone ID for successkpis.world
  
  ECRImageURI:
    Type: String
    Description: ECR Image URI for AutoGen Studio
    Default: 992257105959.dkr.ecr.us-east-1.amazonaws.com/autogen-studio:latest
  
  DatabasePassword:
    Type: String
    NoEcho: true
    MinLength: 8
    MaxLength: 128
    Description: Password for the RDS PostgreSQL database
    Default: AutoGenStudio2024!

Resources:
  # RDS Subnet Group
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for AutoGen Studio RDS
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      Tags:
        - Key: Name
          Value: autogen-studio-db-subnet-group

  # RDS Security Group
  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for AutoGen Studio RDS
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !Ref AppRunnerSecurityGroup
      Tags:
        - Key: Name
          Value: autogen-studio-db-sg

  # App Runner Security Group (for reference)
  AppRunnerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for AutoGen Studio App Runner
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: autogen-studio-app-sg

  # VPC for RDS
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: autogen-studio-vpc

  # Private Subnets for RDS
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: autogen-studio-private-subnet-1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: autogen-studio-private-subnet-2

  # RDS PostgreSQL Database
  Database:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Snapshot
    Properties:
      DBInstanceIdentifier: autogen-studio-db
      DBInstanceClass: db.t3.micro
      Engine: postgres
      EngineVersion: '15.4'
      MasterUsername: autogen_admin
      MasterUserPassword: !Ref DatabasePassword
      AllocatedStorage: 20
      StorageType: gp3
      StorageEncrypted: true
      BackupRetentionPeriod: 7
      DBSubnetGroupName: !Ref DBSubnetGroup
      VPCSecurityGroups:
        - !Ref DatabaseSecurityGroup
      PubliclyAccessible: false
      MultiAZ: false
      Tags:
        - Key: Name
          Value: autogen-studio-database

  # Secrets Manager for Database Credentials
  DatabaseSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: autogen-studio/database
      Description: Database credentials for AutoGen Studio
      SecretString: !Sub |
        {
          "username": "autogen_admin",
          "password": "${DatabasePassword}",
          "host": "${Database.Endpoint.Address}",
          "port": "5432",
          "dbname": "postgres"
        }

  # IAM Role for App Runner
  AppRunnerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AutoGenStudioAppRunnerRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: tasks.apprunner.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSAppRunnerServicePolicyForECRAccess
      Policies:
        - PolicyName: SecretsManagerAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: !Ref DatabaseSecret

  # App Runner Service
  AppRunnerService:
    Type: AWS::AppRunner::Service
    DependsOn: Database
    Properties:
      ServiceName: autogen-studio
      SourceConfiguration:
        ImageRepository:
          ImageIdentifier: !Ref ECRImageURI
          ImageConfiguration:
            Port: '8080'
            RuntimeEnvironmentVariables:
              DATABASE_URI: !Sub 
                - 'postgresql://autogen_admin:${Password}@${Endpoint}:5432/postgres'
                - Password: !Ref DatabasePassword
                  Endpoint: !GetAtt Database.Endpoint.Address
          ImageRepositoryType: ECR
        AutoDeploymentsEnabled: false
      InstanceConfiguration:
        Cpu: 1 vCPU
        Memory: 2 GB
        InstanceRoleArn: !GetAtt AppRunnerRole.Arn
      HealthCheckConfiguration:
        Protocol: HTTP
        Path: /docs
        Interval: 30
        Timeout: 5
        HealthyThreshold: 2
        UnhealthyThreshold: 5
      Tags:
        - Key: Name
          Value: autogen-studio-service

  # SSL Certificate
  SSLCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: !Ref DomainName
          HostedZoneId: !Ref HostedZoneId
      Tags:
        - Key: Name
          Value: autogen-studio-certificate

  # Route 53 Record
  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: CNAME
      TTL: 300
      ResourceRecords:
        - !GetAtt AppRunnerService.ServiceUrl

  # CloudWatch Log Group
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/apprunner/autogen-studio
      RetentionInDays: 14

Outputs:
  AppRunnerURL:
    Description: App Runner Service URL
    Value: !Sub 'https://${AppRunnerService.ServiceUrl}'
    Export:
      Name: !Sub '${AWS::StackName}-AppRunnerURL'

  CustomDomainURL:
    Description: Custom Domain URL
    Value: !Sub 'https://${DomainName}'
    Export:
      Name: !Sub '${AWS::StackName}-CustomDomainURL'

  DatabaseEndpoint:
    Description: RDS Database Endpoint
    Value: !GetAtt Database.Endpoint.Address
    Export:
      Name: !Sub '${AWS::StackName}-DatabaseEndpoint'

  DatabaseSecretArn:
    Description: Database Secret ARN
    Value: !Ref DatabaseSecret
    Export:
      Name: !Sub '${AWS::StackName}-DatabaseSecretArn'

  CertificateArn:
    Description: SSL Certificate ARN
    Value: !Ref SSLCertificate
    Export:
      Name: !Sub '${AWS::StackName}-CertificateArn'
